if (window.SmsTools == null) {
  window.SmsTools = {};
}

SmsTools.Message = (function() {
  Message.prototype.maxLengthForEncoding = {
    ascii: {
      normal: 160,
      concatenated: 153
    },
    gsm: {
      normal: 160,
      concatenated: 153
    },
    unicode: {
      normal: 70,
      concatenated: 67
    }
  };

  Message.prototype.doubleByteCharsInGsmEncoding = {
    '^': true,
    '{': true,
    '}': true,
    '[': true,
    '~': true,
    ']': true,
    '|': true,
    '€': true,
    '\\': true
  };

  Message.prototype.asciiPattern = /^[\x00-\x7F]*$/;

  Message.prototype.gsmEncodingPattern = /^[0-9a-zA-Z@Δ¡¿£_!Φ"¥Γ#èΛ¤éΩ%ùΠ&ìΨòΣçΘΞ:Ø;ÄäøÆ,<Ööæ=ÑñÅß>ÜüåÉ§à€~ \$\.\-\+\(\)\*\\\/\?\|\^\}\{\[\]\'\r\n]*$/;

  function Message(text) {
    this.text = text;
    this.text = this.text.replace(/\r\n?/g, "\n");
    this.encoding = this._encoding();
    this.length = this._length();
    this.concatenatedPartsCount = this._concatenatedPartsCount();
  }

  Message.prototype.maxLengthFor = function(concatenatedPartsCount) {
    var messageType;
    messageType = concatenatedPartsCount > 1 ? 'concatenated' : 'normal';
    return concatenatedPartsCount * this.maxLengthForEncoding[this.encoding][messageType];
  };

  Message.prototype.use_gsm_encoding = function() {
    if (SmsTools['use_gsm_encoding'] === void 0) {
      return true;
    } else {
      return SmsTools['use_gsm_encoding'];
    }
  };

  Message.prototype._encoding = function() {
    if (this.asciiPattern.test(this.text)) {
      return 'ascii';
    } else if (this.use_gsm_encoding() && this.gsmEncodingPattern.test(this.text)) {
      return 'gsm';
    } else {
      return 'unicode';
    }
  };

  Message.prototype._concatenatedPartsCount = function() {
    var encoding, length;
    encoding = this.encoding;
    length = this.length;
    if (length <= this.maxLengthForEncoding[encoding].normal) {
      return 1;
    } else {
      return parseInt(Math.ceil(length / this.maxLengthForEncoding[encoding].concatenated), 10);
    }
  };

  Message.prototype._length = function() {
    var char, i, len, length, ref;
    length = this.text.length;
    if (this.encoding === 'gsm') {
      ref = this.text;
      for (i = 0, len = ref.length; i < len; i++) {
        char = ref[i];
        if (this.doubleByteCharsInGsmEncoding[char]) {
          length += 1;
        }
      }
    }
    return length;
  };

  return Message;

})();

// ---
// generated by coffee-script 1.9.2